<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:vm="clr-namespace:WpfCheatSheet.ViewModels"
        xmlns:m="clr-namespace:WpfCheatSheet.Models"
        xmlns:msg="clr-namespace:WpfCheatSheet.Messengers"
        xmlns:b="clr-namespace:WpfCheatSheet.Behaviors"
        x:Class="WpfCheatSheet.Views.MainWindow"
        WindowStartupLocation="CenterScreen"
        SizeToContent="WidthAndHeight"
        AllowDrop="True"
        Title="{Binding WindowTitle}">
    <Window.DataContext>
        <vm:ViewModel />
    </Window.DataContext>
    <Window.Resources>
        <CollectionViewSource x:Key="Items"
                              Source="{Binding Items}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="UpdatedAt"
                                    Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <ObjectDataProvider x:Key="BLT"
                            MethodName="GetValues"
                            ObjectType="{x:Type s:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="m:BLT" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <i:Interaction.Behaviors>
        <b:DropBehavior Command="{Binding DropCommand}" />
        <b:EscapeOnWindowBehavior />
    </i:Interaction.Behaviors>
    <i:Interaction.Triggers>
        <msg:MessageTrigger SourceObject="{Binding Messenger}">
            <msg:MessageTriggerAction />
        </msg:MessageTrigger>
    </i:Interaction.Triggers>
    <StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <CheckBox Content="Folder1"
                      IsChecked="{Binding ElementName=FolderTextBox, Path=IsEnabled}" />
            <TextBox Grid.Column="1"
                     Name="FolderTextBox"
                     Text="{Binding Folder1, Converter={StaticResource UncConverter}}"
                     ToolTip="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}">
                <TextBox.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding OpenFolderCommand}"
                                  CommandParameter="Folder1" />
                </TextBox.InputBindings>
            </TextBox>
            <CheckBox Grid.Row="1"
                      Content="File1"
                      IsChecked="{Binding ElementName=FileTextBox, Path=IsEnabled}" />
            <TextBox Grid.Row="1"
                     Grid.Column="1"
                     Name="FileTextBox"
                     Text="{Binding File1, Converter={StaticResource UncConverter}}"
                     ToolTip="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}">
                <TextBox.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding OpenFileCommand}"
                                  CommandParameter="File1" />
                </TextBox.InputBindings>
            </TextBox>
            <Label Grid.Row="2"
                   Content="{Binding Decimal1}"
                   ContentStringFormat="{}{0:#,##0.00##########################}" />
            <TextBox Grid.Row="2"
                     Grid.Column="1"
                     Text="{Binding Decimal1, StringFormat={}{0:#\,##0.00##########################}}" />
        </Grid>
        <Button Content="Save"
                Command="{Binding SaveSettingsCommand}" />
        <ComboBox ItemsSource="{Binding Source={StaticResource BLT}}"
                  SelectedValue="{Binding SelectedBLT}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <TextBox Text="Enable me if bacon is selected."
                   IsEnabled="{Binding SelectedBLT, Converter={StaticResource EnumToBoolConverter}}" />
        <DataGrid Name="DataGrid1"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  ItemsSource="{Binding Source={StaticResource Items}}"
                  SelectedItem="{Binding SelectedItem}"
                  MaxHeight="{Binding DataGridMaxHeight}">
            <i:Interaction.Behaviors>
                <b:MouseMoveBehavior Command="{Binding MouseMoveCommand}" />
            </i:Interaction.Behaviors>
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete"
                            Command="{Binding DeleteCommand}" />
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding ShowSelectedItemCommand}" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name"
                                    Binding="{Binding Name}" />
                <DataGridTextColumn Header="IsActive"
                                    Binding="{Binding IsActive, Converter={StaticResource BoolToStringConverter}}" />
                <DataGridTextColumn Header="UpdatedBy"
                                    Binding="{Binding UpdatedBy}" />
                <!-- Specify StringFormat not to display seconds. -->
                <DataGridTextColumn Header="UpdatedAt"
                                    Binding="{Binding UpdatedAt, StringFormat=\{0:yyyy/MM/dd HH:mm\}}"
                                    SortDirection="Descending" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Activate"
                              Command="{Binding ActivateCommand}"
                              Visibility="{Binding SelectedItem.IsActive, Converter={StaticResource InverseBoolToVisilibityConverter}}" />
                    <MenuItem Header="Delete"
                              Command="{Binding DeleteCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <Image Width="200"
               Height="200"
               Source="{StaticResource GreatWave}" />
    </StackPanel>
</Window>